
#==================== SegonMergeTag ============================
#========================= Begin ===============================
#===============================================================
# System
#===============================================================
# 设置开启为256色
if [ "$TERM" == "xterm" ]; then
    export TERM=xterm-256color
fi
# show folder size
#alias du='du -h --max-depth=1'

# open folder
alias of='nautilus'

# cd
alias ..='cd ..'

# grep
alias grepir='grep -inr '

# tar -xvzf
alias untar='tar -xvzf'

#ccache
export USE_CCACHE=1
export CCACHE_DIR=/work/.ccache

# history show date & time
export HISTTIMEFORMAT="%F %T "

echogreen(){
    echo -e "\033[0;32m$1\033[00m"
}

echored(){
    echo -e "\033[0;31m$1\033[00m"
}

echoerror(){
    echored "                   .-\"      \"-. "
    echored "                  /            \  "
    echored "                 |              | "
    echored "                 |,  .-.  .-.  ,| "
    echored "                 | )(__/  \__)( | "
    echored "                 |/     /\     \| "
    echored "                 (_     ^^     _) "
    echored "                  \__|IIIIII|__/  "
    echored "                   |-\IIIIII/-|   "
    echored "                   \          /   "
    echored "                    \`--------\`  "
}

#===============================================================
# Android develop
#===============================================================
#
# copy file(s) to vendor with parents path
# param   : file(s) path
# Useage  : cptovendor <path> [<path>...]
# example : cptovendor packages/apps/Settings/Android.mk packages/apps/Settings/AndroidManifest.xml
#
cptovendor(){
    setVendorPathIfNeed
    
    for src in $@
    do
        dest=$VENDOR_SOURCE_PATH/$src
        if [ "$src" = "" ] || [ ! -f $src ] ; then
            echored "Source file is not exist, please check!"
            echoerror
        else
            if [ -f $dest ] ; then
                echo $dest
                echored "Target is already exsit, do you want to override it ? (y/n/c)"
                read yesno
                if [ $yesno = "y" ] || [ $yesno = "Y" ]; then   # 覆盖
                    rm $dest
                elif [ $yesno = "c" ] || [ $yesno = "C" ]; then # 对比
                    vimdiff $src $dest
                    continue
                else                                            # Do nothing...
                    continue
                fi
            fi

            cp --parents $src $VENDOR_SOURCE_PATH

            if [ $? -eq 0 ] ; then
                echogreen "--> $dest"
            else
                echored "Copy error!"
                echoerror
            fi
        fi
    done
}

alias cdtovendor='cd $VENDOR_SOURCE_PATH'

compareToVendor(){
    setVendorPathIfNeed
    if [ "$1" = "" ] ; then
        echo "Error param !"
        echoerror
    else
        if [ "$2" = "vim" ] ; then
            vimdiff $1 $VENDOR_SOURCE_PATH$1
        else
            bcompare $1 $VENDOR_SOURCE_PATH$1
        fi
    fi
}

vdtovendor(){
    compareToVendor $1 vim 
}

bctovendor(){
    compareToVendor $1 bcompare 
}

#
# set vendor path
# param   : vendor path
# example : setVendorPathIfNeed
#
setVendorPathIfNeed(){
    if [ "$VENDOR_SOURCE_PATH" = "" ] || [ ! -d $VENDOR_SOURCE_PATH ] ; then
        echo 'Please input vendor source folder path'
        echo 'for example : vendor/dewav/proprietary/d3679_qmobile-s6/source/'
        while true
        do
            read VENDOR_SOURCE_PATH
            if [ ! -d $VENDOR_SOURCE_PATH ] ; then
                echo "Folder is not exsit, please input vendor source folder path:"
            else
                export VENDOR_SOURCE_PATH=$VENDOR_SOURCE_PATH
                break
            fi
        done
    fi        
    #echo "$VENDOR_SOURCE_PATH"
}

# 编译模块
# mk <path>      - 如果没有指定path，编译当前所在文件夹
#                  如果指定path，编译指定路径的模块
# mk framework   - 编译整个框架
# mk systemimage - 编译system.img
mk(){
    logFile=""

    if [ ! -e "makelog" ] ; then
        mkdir makelog
    fi

    if [[ "$1" != "" && -e "$1/Android.mk" ]] ; then
        logFile="makelog/mmm.log"
        mmm -j8 $1 2>&1 | tee ${logFile}
        highlightShowInstall ${logFile}
    elif [[ "$1" = "" && -e "./Android.mk" ]] ; then
        logFile="makelog/mk.mm.log"
        mm -j8 2>&1 | tee ${logFile}
        highlightShowInstall ${logFile}
    elif [[ "$1" = "framework" || "$1" = "systemimage" ]] ; then
        logFile="makelog/mk.$1.log"
        make -j8 $1 2>&1 | tee ${logFile}
        highlightShowInstall ${logFile}
    else
        echored "Nothing to mk !"
    fi
}

# 编译模块以及依赖模块
# mk <path>      - 如果没有指定path，编译当前所在文件夹的模块以及其依赖的模块
#                  如果指定path，编译指定路径的模块以及其依赖的模块
mka(){
    logFile=""

    if [ ! -e "makelog" ] ; then
        mkdir makelog
    fi

    if [[ "$1" != "" && -e "$1/Android.mk" ]] ; then
        logFile="makelog/mka.mmma.log"
        mmma -j8 $1 2>&1 | tee ${logFile}
        highlightShowInstall ${logFile}
    elif [[ "$1" = "" && -e "./Android.mk" ]] ; then
        logFile="makelog/mka.mma.log"
        mma -j8 2>&1 | tee ${logFile}
        highlightShowInstall ${logFile}
    else
        echored "Nothing to mk !"
    fi
}

# 高亮显示编译结果
highlightShowInstall(){
    if [[ "$1" != "" && -e "$1" && "`cat $1 | grep -c "Install:"`" != 0 ]] ; then
        for path in `cat $1 | grep "Install: " | sed 's/^.*Install:\s*//'`
        do
            echogreen $path
        done
    else
        echored "No installed modules in $1 !"
    fi
}

# 在Android.mk中添加“LOCAL_DEX_PREOPT := false”，即不提取odex
# example: noodex packages/apps/Settings/Android.mk
noodex(){
    if [[ `egrep -c "LOCAL_PACKAGE_NAME :=|LOCAL_MODULE :=" $1` > 0 ]] ; then
        sed '/LOCAL_PACKAGE_NAME :=\|LOCAL_MODULE :=/a\LOCAL_DEX_PREOPT := false' -i $1

        cat $1 | egrep "LOCAL_PACKAGE_NAME :=|LOCAL_MODULE :=|LOCAL_DEX_PREOPT :=" | while read line
        do
            local result=$(echo $line | grep "LOCAL_DEX_PREOPT := false") 
            if [ "$result" != "" ]; then
                echo -e "\033[36m+${line}\033[0m"
            else
                echo ${line}
            fi 
        done
    else
        echored "Not find \"LOCAL_PACKAGE_NAME\" or \"LOCAL_MODULE\" in this file !"
    fi
}
#===============================================================
# Tools
#===============================================================
#===============================================================
# Git
#===============================================================
alias gst='git status'
alias gad='git add .'
alias gac='git add . && git commit'
alias gcm='git commit'
alias gpr='git pull --rebase'
alias gbr='git branch'

# 以前: git push origin d35_s35_a35_custom:refs/for/d35_s35_a35_custom
#   或: git push origin HEAD:refs/for/master
# 现在：gpush
#   ps: 本地branch名记得和服务器上的对应，理由自己看下面代码
gpush(){
    branch=`git branch | grep "\*" | awk -F ' '  '{print $2}'`
    echo "Current branch is : $branch"
    if [ "$branch" == "master" ] ; then
        echo "--> git push origin HEAD:refs/for/master"
        git push origin HEAD:refs/for/master
    else
        echo "--> git push origin $branch:refs/for/$branch"
        git push origin $branch:refs/for/$branch
    fi
}

# Reset code
alias grt='git reset --hard HEAD && git clean -fd && git pull --rebase'

#===============================================================
# SVN
#===============================================================
alias rmsvn='find . -type d -name ".svn" | xargs rm -rf'

#===============================================================
# adb
#===============================================================

alias adbr='adb remount '
alias adbrr='adb kill-server && adb start-server && adb remount '
alias adbl='adb logcat '
alias adbs='adb shell '
alias adbcurrentactivity="adb shell dumpsys activity | grep mFocusedActivity"   # 得到当前屏幕是哪个Activity
alias adbsmem="adb shell cat /proc/meminfo"     # 查看内存信息
alias adbscpu="adb shell cat /proc/cpuinfo"     # 查看CPU信息
alias showmem="adb shell dumpsys meminfo"       # 查看内存信息

#
# Capture the screen and save image to current path
# param   : Capture's name
# Useage  : adbcap name
# example : adbcap demo
#
adbcap(){
    adb shell screencap -p /sdcard/$1.png && adb pull /sdcard/$1.png
}

#
# Push files into phone
# param   : file's path, must start with "out/target/product/projectname/"
# Useage  : adbp <path> [<path>...]
# example : adbp out/target/product/a3658/system/app/Email/Email.apk
#
adbp(){
    logFile="push.log"

    adb remount
    for path in $@
    do
        if [ "$path" = "" ] || [ ! -f $path ] ; then
            echogreen "Source file is not exist, please check!"
        else
            dir=`dirname $path`
            dir=`echo $dir | sed 's/out\/target\/product\/.....\///g'`
            echogreen "adb push $path $dir"
            adb push -p $path $dir 2>&1 | tee ${logFile}
            if [ "`cat ${logFile} | grep -c "failed"`" != 0 ]; then
                echoerror
            fi
        fi
    done
    rm ${logFile}
}

#使用说明：比如想杀掉systemui进程，$ adbkill systemui
adbkill(){
    pid=0

    OLD_IFS="$IFS"
    IFS=";"
    process=(`adbs ps | grep -i $1 | awk '{printf("%s\t%s\n;", $2, $9)}'`)
    IFS="$OLD_IFS"
    
    length=${#process[@]}

    if [ $length == 0 ] ; then
    	echogreen "Not find !!!"
    elif [ $length == 1 ] ; then
        pid=`echo ${process[0]} | awk '{printf $1}'`
    	echogreen "kill -> ${process[0]}"
        adb shell kill $pid
    else
        for i in "${!process[@]}"; do 
            printf "%s\t%s" "$i" "${process[$i]}"
        done

        echo -n "For many options, please enter index :"
        read index

        if [ "$index" != "" ] ; then
            if [[ "$index" -ge 0 && "$index" -lt "$length" ]] ; then
                pid=`echo ${process[$index]} | awk '{printf $1}'`
                echogreen "kill -> ${process[$index]}"
                adb shell kill $pid
            else
                echored "Error index!"
            fi
        fi
    fi
}

# 恢复出厂设置
alias adbfactoryreset='adb shell am broadcast -a android.intent.action.MASTER_CLEAR'

# 开发时要改的一些设置
adbdev(){
    # 充电时手机常亮
    adbSetSetting global stay_on_while_plugged_in 3
    # 灭屏时间30分钟
    adbSetSetting system screen_off_timeout 1800000
}

adbSetSetting(){
    local filed=$1
    local name=$2
    local value=$3

    local LENGTH=-25
    adb shell settings put $filed $name $value
    printf "\033[0;32m%s %${LENGTH}s --> %s\033[00m\n" "$filed" "$name" `adb shell settings get $filed $name`
}

# 打开mtklog界面
alias smtk='adb shell am start -n com.mediatek.mtklogger/.MainActivity'

# 删除手机中的mtk文件夹
alias dmtk='adb shell rm -rf /sdcard/mtklog'

# 将手机中的mtklog拷贝到~/log目录下
pmtk(){
    local name=`adb shell getprop ro.product.name`
    # 获取手机name成功
    if [ $? -eq 0 ] ; then
        # 是否有log标题
        if [ "$1" = "" ]; then
            local folderName=${name}-`date +%m%d%k%M`
        else
            local folderName=${name}-`date +%m%d%k%M`-${1}
        fi
        local logPath=~/log/${folderName}/mtklog
        mkdir -p "${logPath}"
        adb pull /sdcard/mtklog "${logPath}"
        echogreen "--> ${logPath}"
    fi
}


#===============================================================
# check clash
#===============================================================
# 检查代码冲突,可检查所有客户也可以检查单个客户，详见帮助输出内容
ckc(){
if [[ $3 = "" ]]; then
    for path in `tree -L 1 -ifd "vendor/dewav/proprietary/" | egrep "[a-z][0-9]{4}" | sed "/_dw/d"`
    do
        echo -e "\033[0;32m--> $path\033[00m"
        path=$path"/source/"
        files=`find $path -type f`
        git diff --name-only $1..$2 -- ${files//$path/} 2>&1 | tee check.clash.temp
        echo
    done
    rm check.clash.temp
elif [[ $3 = *"source/" ]]; then
    files=`find $3 -type f`
    git diff --name-only $1..$2 -- ${files//$3/} 2>&1 | tee check.clash.temp
    rm check.clash.temp
else
echo "
Usage: ckc <start-commit> <end-commit> [<vendor-path>]

<vendor-path> : 如果省略，默认检查所有客户目录；
                如果为\"vendor/dewav/proprietary/custom_folder/source/\", 则只检查指定客户目录。
                注意路径要以\"/\"结尾！
Demo:
    检查两个commit之间所有客户的冲突：
        ckc 47fdc5f 617497e
    检查两个commit之间\"i6369_dtac-s3\"是否有冲突：
        ckc 47fdc5f 617497e vendor/dewav/proprietary/i6155_dtac-s3/source/
"
fi
}

# 检查最后编译版本到HEAD之间，是否存在代码冲突
# 参数 1： 检索tag的关键字
# 参数 2： vendor中客户目录的名字
# 示  例： ckv I6155_I61551_DTAC-S3_ i6155_dtac-s3
ckv(){
    local lastTag=`git tag --sort=-creatordate -l ${1}* | head -n 1`
    if [ ! -z $lastTag ]; then
        echo -e "\033[0;32m--> last tag is: $lastTag\033[00m"
        ckc ${lastTag} HEAD "vendor/dewav/proprietary/${2}/source/"
    else
        echo "Not find tag !"
    fi
}

# 快捷命令，检查指定客户目录
cki6155dtac(){
    ckv I6155_I61551_DTAC-S3_ i6155_dtac-s3
}
ckb3679dtac(){
    ckv B3679_DB36792_DTAC-T3_ b3679_dtac-t2n
}
#========================== End ================================
